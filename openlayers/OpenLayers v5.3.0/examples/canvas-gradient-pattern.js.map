{"version":3,"sources":["webpack:///./canvas-gradient-pattern.js"],"names":["__webpack_require__","r","__webpack_exports__","grad","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_has_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_proj_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_6__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_7__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_8__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_9__","canvas","document","createElement","context","getContext","pixelRatio","gradient","createLinearGradient","addColorStop","pattern","width","height","fillStyle","fillRect","beginPath","arc","Math","PI","fill","createPattern","style","stroke","color","vectorLayer","source","url","format","feature","const","id","getId","setColor","layers","target","view","center","Object","zoom"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAkBQC,EAlBRC,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,GAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAA,GAAAU,EAAAV,EAAA,IAAAW,EAAAX,EAAA,IAAAY,EAAAZ,EAAA,IAAAa,EAAAb,EAAA,IASMc,EAASC,SAASC,cAAc,UAChCC,EAAUH,EAAOI,WAAW,MAI5BC,EAAaZ,EAAA,EAGba,IACEjB,EAAOc,EAAQI,qBAAqB,EAAG,EAAG,IAAMF,EAAY,IAC7DG,aAAa,EAAG,OACrBnB,EAAKmB,aAAa,EAAI,EAAG,UACzBnB,EAAKmB,aAAa,EAAI,EAAG,UACzBnB,EAAKmB,aAAa,GAAO,SACzBnB,EAAKmB,aAAa,EAAI,EAAG,QACzBnB,EAAKmB,aAAa,EAAI,EAAG,QACzBnB,EAAKmB,aAAa,EAAG,UACdnB,GAIHoB,GACJT,EAAOU,MAAQ,EAAIL,EACnBL,EAAOW,OAAS,EAAIN,EAEpBF,EAAQS,UAAY,QACpBT,EAAQU,SAAS,EAAG,EAAGb,EAAOU,MAAOV,EAAOW,QAE5CR,EAAQS,UAAY,yBACpBT,EAAQW,YACRX,EAAQY,IAAI,EAAIV,EAAY,EAAIA,EAAY,EAAIA,EAAY,EAAG,EAAIW,KAAKC,IACxEd,EAAQe,OAERf,EAAQS,UAAY,kBACpBT,EAAQW,YACRX,EAAQY,IAAI,EAAIV,EAAY,EAAIA,EAAY,IAAMA,EAAY,EAAG,EAAIW,KAAKC,IAC1Ed,EAAQe,OACDf,EAAQgB,cAAcnB,EAAQ,WAIjCkB,EAAO,IAAIrB,EAAA,EACXuB,EAAQ,IAAItB,EAAA,EAAM,CACtBoB,KAAMA,EACNG,OAAQ,IAAItB,EAAA,EAAO,CACjBuB,MAAO,OACPZ,MAAO,MAkBLa,EAAc,IAAI7B,EAAA,EAAY,CAClC8B,OAAQ,IAAI5B,EAAA,EAAa,CACvB6B,IAAK,iCACLC,OAAQ,IAAIlC,EAAA,IAEd4B,MAZsB,SAASO,GAC/BC,IAAMC,EAAKF,EAAQG,QAEnB,OADAZ,EAAKa,SAAc,IAALF,EAAWvB,EAAWG,GAC7BW,KAaG,IAAI9B,EAAA,EAAI,CAClB0C,OAAQ,CACNT,GAEFU,OAAQ,MACRC,KAAM,IAAI3C,EAAA,EAAK,CACb4C,OAAQC,OAAAzC,EAAA,EAAAyC,CAAW,CAAC,GAAI,KACxBC,KAAM","file":"canvas-gradient-pattern.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport {DEVICE_PIXEL_RATIO} from '../src/ol/has.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport {fromLonLat} from '../src/ol/proj.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport {Fill, Stroke, Style} from '../src/ol/style.js';\n\nconst canvas = document.createElement('canvas');\nconst context = canvas.getContext('2d');\n\n// Gradient and pattern are in canvas pixel space, so we adjust for the\n// renderer's pixel ratio\nconst pixelRatio = DEVICE_PIXEL_RATIO;\n\n// Generate a rainbow gradient\nconst gradient = (function() {\n  const grad = context.createLinearGradient(0, 0, 512 * pixelRatio, 0);\n  grad.addColorStop(0, 'red');\n  grad.addColorStop(1 / 6, 'orange');\n  grad.addColorStop(2 / 6, 'yellow');\n  grad.addColorStop(3 / 6, 'green');\n  grad.addColorStop(4 / 6, 'aqua');\n  grad.addColorStop(5 / 6, 'blue');\n  grad.addColorStop(1, 'purple');\n  return grad;\n})();\n\n// Generate a canvasPattern with two circles on white background\nconst pattern = (function() {\n  canvas.width = 8 * pixelRatio;\n  canvas.height = 8 * pixelRatio;\n  // white background\n  context.fillStyle = 'white';\n  context.fillRect(0, 0, canvas.width, canvas.height);\n  // outer circle\n  context.fillStyle = 'rgba(102, 0, 102, 0.5)';\n  context.beginPath();\n  context.arc(4 * pixelRatio, 4 * pixelRatio, 3 * pixelRatio, 0, 2 * Math.PI);\n  context.fill();\n  // inner circle\n  context.fillStyle = 'rgb(55, 0, 170)';\n  context.beginPath();\n  context.arc(4 * pixelRatio, 4 * pixelRatio, 1.5 * pixelRatio, 0, 2 * Math.PI);\n  context.fill();\n  return context.createPattern(canvas, 'repeat');\n}());\n\n// Generate style for gradient or pattern fill\nconst fill = new Fill();\nconst style = new Style({\n  fill: fill,\n  stroke: new Stroke({\n    color: '#333',\n    width: 2\n  })\n});\n\n/**\n * The styling function for the vector layer, will return an array of styles\n * which either contains the aboove gradient or pattern.\n *\n * @param {module:ol/Feature~Feature} feature The feature to style.\n * @return {module:ol/style/Style} The style to use for the feature.\n */\nconst getStackedStyle = function(feature) {\n  const id = feature.getId();\n  fill.setColor(id > 'J' ? gradient : pattern);\n  return style;\n};\n\n// Create a vector layer that makes use of the style function above…\nconst vectorLayer = new VectorLayer({\n  source: new VectorSource({\n    url: 'data/geojson/countries.geojson',\n    format: new GeoJSON()\n  }),\n  style: getStackedStyle\n});\n\n// … finally create a map with that layer.\nconst map = new Map({\n  layers: [\n    vectorLayer\n  ],\n  target: 'map',\n  view: new View({\n    center: fromLonLat([16, 48]),\n    zoom: 3\n  })\n});\n"],"sourceRoot":""}