{"version":3,"sources":["webpack:///./box-selection.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_events_condition_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_6__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_7__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_8__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_9__","vectorSource","url","format","map","layers","source","target","view","center","zoom","select","addInteraction","const","selectedFeatures","getFeatures","dragBox","condition","on","extent","getGeometry","getExtent","forEachFeatureIntersectingExtent","feature","push","clear","infoBox","document","getElementById","names","getArray","get","length","innerHTML","join"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,IAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,GAAAU,EAAAV,EAAA,IAAAW,EAAAX,EAAA,IAAAY,EAAAZ,EAAA,IASMa,EAAe,IAAIF,EAAA,EAAa,CACpCG,IAAK,iCACLC,OAAQ,IAAIT,EAAA,IAIRU,EAAM,IAAIb,EAAA,EAAI,CAClBc,OAAQ,CACN,IAAIR,EAAA,EAAU,CACZS,OAAQ,IAAIN,EAAA,IAEd,IAAIF,EAAA,EAAY,CACdQ,OAAQL,KAGZM,OAAQ,MACRC,KAAM,IAAIhB,EAAA,EAAK,CACbiB,OAAQ,CAAC,EAAG,GACZC,KAAM,MAKJC,EAAS,IAAIhB,EAAA,EACnBS,EAAIQ,eAAeD,GAEnBE,IAAMC,EAAmBH,EAAOI,cAG1BC,EAAU,IAAIpB,EAAA,EAAQ,CAC1BqB,UAAWxB,EAAA,IAGbW,EAAIQ,eAAeI,GAEnBA,EAAQE,GAAG,SAAU,WAGnBL,IAAMM,EAASH,EAAQI,cAAcC,YACrCpB,EAAaqB,iCAAiCH,EAAQ,SAASI,GAC7DT,EAAiBU,KAAKD,OAK1BP,EAAQE,GAAG,WAAY,WACrBJ,EAAiBW,UAGnBZ,IAAMa,EAAUC,SAASC,eAAe,QAExCd,EAAiBI,GAAG,CAAC,MAAO,UAAW,WACrCL,IAAMgB,EAAQf,EAAiBgB,WAAW1B,IAAI,SAASmB,GACrD,OAAOA,EAAQQ,IAAI,UAEF,EAAfF,EAAMG,OACRN,EAAQO,UAAYJ,EAAMK,KAAK,MAE/BR,EAAQO,UAAY","file":"box-selection.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {platformModifierKeyOnly} from '../src/ol/events/condition.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport {DragBox, Select} from '../src/ol/interaction.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\n\n\nconst vectorSource = new VectorSource({\n  url: 'data/geojson/countries.geojson',\n  format: new GeoJSON()\n});\n\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    }),\n    new VectorLayer({\n      source: vectorSource\n    })\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\n// a normal select interaction to handle click\nconst select = new Select();\nmap.addInteraction(select);\n\nconst selectedFeatures = select.getFeatures();\n\n// a DragBox interaction used to select features by drawing boxes\nconst dragBox = new DragBox({\n  condition: platformModifierKeyOnly\n});\n\nmap.addInteraction(dragBox);\n\ndragBox.on('boxend', function() {\n  // features that intersect the box are added to the collection of\n  // selected features\n  const extent = dragBox.getGeometry().getExtent();\n  vectorSource.forEachFeatureIntersectingExtent(extent, function(feature) {\n    selectedFeatures.push(feature);\n  });\n});\n\n// clear selection when drawing a new box and when clicking on the map\ndragBox.on('boxstart', function() {\n  selectedFeatures.clear();\n});\n\nconst infoBox = document.getElementById('info');\n\nselectedFeatures.on(['add', 'remove'], function() {\n  const names = selectedFeatures.getArray().map(function(feature) {\n    return feature.get('name');\n  });\n  if (names.length > 0) {\n    infoBox.innerHTML = names.join(', ');\n  } else {\n    infoBox.innerHTML = 'No countries selected';\n  }\n});\n"],"sourceRoot":""}