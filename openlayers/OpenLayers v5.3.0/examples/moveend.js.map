{"version":3,"sources":["webpack:///./moveend.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_extent_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_proj_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_source_OSM_js__WEBPACK_IMPORTED_MODULE_5__","display","id","value","document","getElementById","toFixed","wrapLon","Math","floor","layers","source","target","view","center","zoom","on","evt","const","map","extent","getView","calculateExtent","getSize","bottomLeft","Object","topRight"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAA,IAqBA,SAASS,EAAQC,EAAIC,GACnBC,SAASC,eAAeH,GAAIC,MAAQA,EAAMG,QAAQ,GAGpD,SAASC,EAAQJ,GAEf,OAAOA,EAAkB,IADVK,KAAKC,OAAON,EAAQ,KAAO,KAlBhC,IAAIR,EAAA,EAAI,CAClBe,OAAQ,CACN,IAAIZ,EAAA,EAAU,CACZa,OAAQ,IAAIX,EAAA,KAGhBY,OAAQ,MACRC,KAAM,IAAIjB,EAAA,EAAK,CACbkB,OAAQ,CAAC,EAAG,GACZC,KAAM,MAwBNC,GAAG,UAXP,SAAmBC,GACjBC,IAAMC,EAAMF,EAAIE,IACVC,EAASD,EAAIE,UAAUC,gBAAgBH,EAAII,WAC3CC,EAAaC,OAAA1B,EAAA,EAAA0B,CAASA,OAAA5B,EAAA,EAAA4B,CAAcL,IACpCM,EAAWD,OAAA1B,EAAA,EAAA0B,CAASA,OAAA5B,EAAA,EAAA4B,CAAYL,IACtCnB,EAAQ,OAAQM,EAAQiB,EAAW,KACnCvB,EAAQ,SAAUuB,EAAW,IAC7BvB,EAAQ,QAASM,EAAQmB,EAAS,KAClCzB,EAAQ,MAAOyB,EAAS","file":"moveend.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {getBottomLeft, getTopRight} from '../src/ol/extent.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport {toLonLat} from '../src/ol/proj.js';\nimport OSM from '../src/ol/source/OSM.js';\n\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    })\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\nfunction display(id, value) {\n  document.getElementById(id).value = value.toFixed(2);\n}\n\nfunction wrapLon(value) {\n  const worlds = Math.floor((value + 180) / 360);\n  return value - (worlds * 360);\n}\n\nfunction onMoveEnd(evt) {\n  const map = evt.map;\n  const extent = map.getView().calculateExtent(map.getSize());\n  const bottomLeft = toLonLat(getBottomLeft(extent));\n  const topRight = toLonLat(getTopRight(extent));\n  display('left', wrapLon(bottomLeft[0]));\n  display('bottom', bottomLeft[1]);\n  display('right', wrapLon(topRight[0]));\n  display('top', topRight[1]);\n}\n\nmap.on('moveend', onMoveEnd);\n"],"sourceRoot":""}