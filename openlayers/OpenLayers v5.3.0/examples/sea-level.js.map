{"version":3,"sources":["webpack:///./sea-level.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_proj_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_source_Raster_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_source_XYZ_js__WEBPACK_IMPORTED_MODULE_6__","const","key","elevation","url","crossOrigin","transition","raster","sources","operation","pixels","data","pixel","level","map","target","layers","source","opacity","view","center","Object","zoom","control","document","getElementById","output","addEventListener","innerText","value","changed","on","event","locations","getElementsByClassName","i","ii","length","relocate","dataset","getView","setCenter","split","Number","setZoom"],"mappings":"4FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,GAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,IAuBAU,IAAMC,EAAM,4FACNC,EAAY,IAAIH,EAAA,EAAI,CACxBI,IAAK,gFAAkFF,EACvFG,YAAa,YACbC,WAAY,IAGRC,EAAS,IAAIR,EAAA,EAAa,CAC9BS,QAAS,CAACL,GACVM,UAzBF,SAAeC,EAAQC,GACrBV,IAAMW,EAAQF,EAAO,GAYrB,OAXIE,EAAM,KACsE,IAAzC,IAAXA,EAAM,GAAW,IAAiB,IAAXA,EAAM,GAAWA,EAAM,IAAxD,KACFD,EAAKE,OACjBD,EAAM,GAAK,IACXA,EAAM,GAAK,IACXA,EAAM,GAAK,IACXA,EAAM,GAAK,KAEXA,EAAM,GAAK,GAGRA,KAeHE,EAAM,IAAIpB,EAAA,EAAI,CAClBqB,OAAQ,MACRC,OAAQ,CACN,IAAIpB,EAAA,EAAU,CACZqB,OAAQ,IAAIjB,EAAA,EAAI,CACdI,IAAK,yGAA2GF,MAGpH,IAAIL,EAAA,EAAW,CACbqB,QAAS,GACTD,OAAQV,KAGZY,KAAM,IAAIxB,EAAA,EAAK,CACbyB,OAAQC,OAAAvB,EAAA,EAAAuB,CAAW,EAAE,SAAU,UAC/BC,KAAM,OAIJC,EAAUC,SAASC,eAAe,SAClCC,EAASF,SAASC,eAAe,UACvCF,EAAQI,iBAAiB,QAAS,WAChCD,EAAOE,UAAYL,EAAQM,MAC3BtB,EAAOuB,YAETJ,EAAOE,UAAYL,EAAQM,MAE3BtB,EAAOwB,GAAG,mBAAoB,SAASC,GACrCA,EAAMrB,KAAKE,MAAQU,EAAQM,QAI7B,IADA5B,IAAMgC,EAAYT,SAASU,uBAAuB,YACzCC,EAAI,EAAGC,EAAKH,EAAUI,OAAQF,EAAIC,IAAMD,EAC/CF,EAAUE,GAAGR,iBAAiB,QAASW,GAGzC,SAASA,EAASN,GAChB/B,IAAMU,EAAOqB,EAAMjB,OAAOwB,QACpBpB,EAAOL,EAAI0B,UACjBrB,EAAKsB,UAAUpB,OAAAvB,EAAA,EAAAuB,CAAWV,EAAKS,OAAOsB,MAAM,KAAK5B,IAAI6B,UACrDxB,EAAKyB,QAAQD,OAAOhC,EAAKW","file":"sea-level.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {Image as ImageLayer, Tile as TileLayer} from '../src/ol/layer.js';\nimport {fromLonLat} from '../src/ol/proj.js';\nimport RasterSource from '../src/ol/source/Raster.js';\nimport XYZ from '../src/ol/source/XYZ.js';\n\nfunction flood(pixels, data) {\n  const pixel = pixels[0];\n  if (pixel[3]) {\n    const height = -10000 + ((pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1);\n    if (height <= data.level) {\n      pixel[0] = 145;\n      pixel[1] = 175;\n      pixel[2] = 186;\n      pixel[3] = 255;\n    } else {\n      pixel[3] = 0;\n    }\n  }\n  return pixel;\n}\n\nconst key = 'pk.eyJ1IjoidHNjaGF1YiIsImEiOiJjaW5zYW5lNHkxMTNmdWttM3JyOHZtMmNtIn0.CDIBD8H-G2Gf-cPkIuWtRg';\nconst elevation = new XYZ({\n  url: 'https://api.mapbox.com/v4/mapbox.terrain-rgb/{z}/{x}/{y}.pngraw?access_token=' + key,\n  crossOrigin: 'anonymous',\n  transition: 0\n});\n\nconst raster = new RasterSource({\n  sources: [elevation],\n  operation: flood\n});\n\nconst map = new Map({\n  target: 'map',\n  layers: [\n    new TileLayer({\n      source: new XYZ({\n        url: 'https://api.mapbox.com/styles/v1/tschaub/ciutc102t00c62js5fqd47kqw/tiles/256/{z}/{x}/{y}?access_token=' + key\n      })\n    }),\n    new ImageLayer({\n      opacity: 0.6,\n      source: raster\n    })\n  ],\n  view: new View({\n    center: fromLonLat([-122.3267, 37.8377]),\n    zoom: 11\n  })\n});\n\nconst control = document.getElementById('level');\nconst output = document.getElementById('output');\ncontrol.addEventListener('input', function() {\n  output.innerText = control.value;\n  raster.changed();\n});\noutput.innerText = control.value;\n\nraster.on('beforeoperations', function(event) {\n  event.data.level = control.value;\n});\n\nconst locations = document.getElementsByClassName('location');\nfor (let i = 0, ii = locations.length; i < ii; ++i) {\n  locations[i].addEventListener('click', relocate);\n}\n\nfunction relocate(event) {\n  const data = event.target.dataset;\n  const view = map.getView();\n  view.setCenter(fromLonLat(data.center.split(',').map(Number)));\n  view.setZoom(Number(data.zoom));\n}\n"],"sourceRoot":""}