{"version":3,"sources":["webpack:///./layer-swipe.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_source_BingMaps_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_source_OSM_js__WEBPACK_IMPORTED_MODULE_4__","osm","source","bing","key","imagerySet","map","layers","target","view","center","zoom","swipe","document","getElementById","on","event","const","ctx","context","width","canvas","value","save","beginPath","rect","height","clip","restore","addEventListener","render"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,GAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAMMQ,EAAM,IAAIH,EAAA,EAAU,CACxBI,OAAQ,IAAIF,EAAA,IAERG,EAAO,IAAIL,EAAA,EAAU,CACzBI,OAAQ,IAAIH,EAAA,EAAS,CACnBK,IAAK,mEACLC,WAAY,aAIVC,EAAM,IAAIV,EAAA,EAAI,CAClBW,OAAQ,CAACN,EAAKE,GACdK,OAAQ,MACRC,KAAM,IAAIZ,EAAA,EAAK,CACba,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EAAQC,SAASC,eAAe,SAEtCX,EAAKY,GAAG,aAAc,SAASC,GAC7BC,IAAMC,EAAMF,EAAMG,QACZC,EAAQF,EAAIG,OAAOD,OAASR,EAAMU,MAAQ,KAEhDJ,EAAIK,OACJL,EAAIM,YACJN,EAAIO,KAAKL,EAAO,EAAGF,EAAIG,OAAOD,MAAQA,EAAOF,EAAIG,OAAOK,QACxDR,EAAIS,SAGNxB,EAAKY,GAAG,cAAe,SAASC,GAClBA,EAAMG,QACdS,YAGNhB,EAAMiB,iBAAiB,QAAS,WAC9BvB,EAAIwB,WACH","file":"layer-swipe.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport BingMaps from '../src/ol/source/BingMaps.js';\nimport OSM from '../src/ol/source/OSM.js';\n\nconst osm = new TileLayer({\n  source: new OSM()\n});\nconst bing = new TileLayer({\n  source: new BingMaps({\n    key: 'As1HiMj1PvLPlqc_gtM7AqZfBL8ZL3VrjaS3zIb22Uvb9WKhuJObROC-qUpa81U5',\n    imagerySet: 'Aerial'\n  })\n});\n\nconst map = new Map({\n  layers: [osm, bing],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\nconst swipe = document.getElementById('swipe');\n\nbing.on('precompose', function(event) {\n  const ctx = event.context;\n  const width = ctx.canvas.width * (swipe.value / 100);\n\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(width, 0, ctx.canvas.width - width, ctx.canvas.height);\n  ctx.clip();\n});\n\nbing.on('postcompose', function(event) {\n  const ctx = event.context;\n  ctx.restore();\n});\n\nswipe.addEventListener('input', function() {\n  map.render();\n}, false);\n"],"sourceRoot":""}