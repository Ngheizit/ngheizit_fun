{"version":3,"sources":["webpack:///./fractal.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Feature_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_5__","radius","cos30","Math","cos","PI","rise","sin","run","triangle","feature","layer","source","features","layers","target","view","center","zoom","const","updateTimer","depthInput","document","getElementById","update","depth","geometry","clone","graph","coordinates","point","length","level","node","next","coordsToGraph","getCoordinates","i","let","thirdNode","secondNode","firstNode","endNode","startNode","start","end","dx","dy","sqrt","a","atan2","graphToCoords","innerHTML","setCoordinates","setGeometry","makeFractal","Number","value","onchange","window","clearTimeout","setTimeout"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,GAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,IAOMS,EAAS,IACTC,EAAQC,KAAKC,IAAID,KAAKE,GAAK,GAE3BC,EAAOL,EADCE,KAAKI,IAAIJ,KAAKE,GAAK,GAE3BG,EAAMP,EAASC,EAEfO,EAAW,IAAIX,EAAA,EAAW,CAC9B,CAAC,EAAGG,GAAS,CAACO,GAAMF,GAAO,EAAEE,GAAMF,GAAO,CAAC,EAAGL,KAG1CS,EAAU,IAAIf,EAAA,EAAQc,GAEtBE,EAAQ,IAAIZ,EAAA,EAAY,CAC5Ba,OAAQ,IAAIZ,EAAA,EAAa,CACvBa,SAAU,CAACH,OAIH,IAAId,EAAA,EAAI,CAClBkB,OAAQ,CAACH,GACTI,OAAQ,MACRC,KAAM,IAAInB,EAAA,EAAK,CACboB,OAAQ,CAAC,EAAG,GACZC,KAAM,MA2EVC,IAMIC,EANEC,EAAaC,SAASC,eAAe,SAE3C,SAASC,KAzET,SAAqBC,GAGnB,IAFAN,IAAMO,EAAWjB,EAASkB,QACpBC,EA+CR,SAAuBC,GAKrB,IAJAV,IAAMS,EAAQ,CACZE,MAAOD,EAAY,IAEfE,EAASF,EAAYE,OAClBC,EAAQ,EAAGC,EAAOL,EAAOI,EAAQD,EAAS,IAAKC,EACtDC,EAAKC,KAAO,CACVJ,MAAOD,EAAYG,EAAQ,IAE7BC,EAAOA,EAAKC,KAEd,OAAON,EA1DOO,CAAcT,EAASU,kBAC5BC,EAAI,EAAGA,EAAIZ,IAASY,EAE3B,IADAC,IAAIL,EAAOL,EACJK,EAAKC,MAAM,CAChBf,IAAMe,EAAOD,EAAKC,KAgChBK,EALAC,EAPAC,OARAC,KADaC,EAVHV,GAWUC,KAEpBU,EAAQD,EAAUb,MAClBe,EAAMF,EAAUT,KAAKJ,MACrBgB,EAAKD,EAAI,GAAKD,EAAM,GACpBG,EAAKF,EAAI,GAAKD,EAAM,GAGpBH,EAAY,CAChBX,MAAO,CAACc,EAAM,GAAKE,EAAK,EAAGF,EAAM,GAAKG,EAAK,IAIvCtD,EAAIU,KAAK6C,KAAKF,EAAKA,EAAKC,EAAKA,IAAO,EAAI7C,GACxC+C,EAAI9C,KAAK+C,MAAMH,EAAID,GAAM3C,KAAKE,GAAK,EACnCmC,EAAa,CACjBV,MAAO,CAACc,EAAM,GAAKnD,EAAIU,KAAKC,IAAI6C,GAAIL,EAAM,GAAKnD,EAAIU,KAAKI,IAAI0C,KAIxDV,EAAY,CAChBT,MAAO,CAACe,EAAI,GAAKC,EAAK,EAAGD,EAAI,GAAKE,EAAK,OAGzCJ,EAAUT,KAAOO,GACPP,KAAOM,GACNN,KAAOK,GACRL,KAAOQ,EArCbT,EAAOC,EASb,IAAqBS,EACbD,EAEAE,EACAC,EACAC,EACAC,EAGAN,EAKAhD,EACAwD,EACAT,EAKAD,EA3BNpB,IAAMU,EAoDR,SAAuBD,GAErB,IADAT,IAAMU,EAAc,CAACD,EAAME,OAClBG,EAAOL,EAAOS,EAAI,EAAGJ,EAAKC,KAAMD,EAAOA,EAAKC,OAAQG,EAC3DR,EAAYQ,GAAKJ,EAAKC,KAAKJ,MAE7B,OAAOD,EAzDasB,CAAcvB,GAClCN,SAASC,eAAe,SAAS6B,UAAYvB,EAAYE,OACzDL,EAAS2B,eAAexB,GACxBnB,EAAQ4C,YAAY5B,GA4DpB6B,CAAYC,OAAOnC,EAAWoC,QAUhCpC,EAAWqC,SAAW,WACpBC,OAAOC,aAAaxC,GACpBA,EAAcuC,OAAOE,WAAWrC,EAAQ,MAG1CA","file":"fractal.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport LineString from '../src/ol/geom/LineString.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\n\nconst radius = 10e6;\nconst cos30 = Math.cos(Math.PI / 6);\nconst sin30 = Math.sin(Math.PI / 6);\nconst rise = radius * sin30;\nconst run = radius * cos30;\n\nconst triangle = new LineString([\n  [0, radius], [run, -rise], [-run, -rise], [0, radius]\n]);\n\nconst feature = new Feature(triangle);\n\nconst layer = new VectorLayer({\n  source: new VectorSource({\n    features: [feature]\n  })\n});\n\nconst map = new Map({\n  layers: [layer],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 1\n  })\n});\n\nfunction makeFractal(depth) {\n  const geometry = triangle.clone();\n  const graph = coordsToGraph(geometry.getCoordinates());\n  for (let i = 0; i < depth; ++i) {\n    let node = graph;\n    while (node.next) {\n      const next = node.next;\n      injectNodes(node);\n      node = next;\n    }\n  }\n  const coordinates = graphToCoords(graph);\n  document.getElementById('count').innerHTML = coordinates.length;\n  geometry.setCoordinates(coordinates);\n  feature.setGeometry(geometry);\n}\n\nfunction injectNodes(startNode) {\n  const endNode = startNode.next;\n\n  const start = startNode.point;\n  const end = startNode.next.point;\n  const dx = end[0] - start[0];\n  const dy = end[1] - start[1];\n\n  // first point at 1/3 along the segment\n  const firstNode = {\n    point: [start[0] + dx / 3, start[1] + dy / 3]\n  };\n\n  // second point at peak of _/\\_\n  const r = Math.sqrt(dx * dx + dy * dy) / (2 * cos30);\n  const a = Math.atan2(dy, dx) + Math.PI / 6;\n  const secondNode = {\n    point: [start[0] + r * Math.cos(a), start[1] + r * Math.sin(a)]\n  };\n\n  // third point at 2/3 along the segment\n  const thirdNode = {\n    point: [end[0] - dx / 3, end[1] - dy / 3]\n  };\n\n  startNode.next = firstNode;\n  firstNode.next = secondNode;\n  secondNode.next = thirdNode;\n  thirdNode.next = endNode;\n}\n\n\nfunction coordsToGraph(coordinates) {\n  const graph = {\n    point: coordinates[0]\n  };\n  const length = coordinates.length;\n  for (let level = 0, node = graph; level < length - 1; ++level) {\n    node.next = {\n      point: coordinates[level + 1]\n    };\n    node = node.next;\n  }\n  return graph;\n}\n\nfunction graphToCoords(graph) {\n  const coordinates = [graph.point];\n  for (let node = graph, i = 1; node.next; node = node.next, ++i) {\n    coordinates[i] = node.next.point;\n  }\n  return coordinates;\n}\n\nconst depthInput = document.getElementById('depth');\n\nfunction update() {\n  makeFractal(Number(depthInput.value));\n}\n\nlet updateTimer;\n\n\n/**\n * Regenerate fractal on depth change.  Change events are debounced so updates\n * only occur every 200ms.\n */\ndepthInput.onchange = function() {\n  window.clearTimeout(updateTimer);\n  updateTimer = window.setTimeout(update, 200);\n};\n\nupdate();\n"],"sourceRoot":""}