{"version":3,"sources":["webpack:///./layer-group.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_proj_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_source_OSM_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_source_TileJSON_js__WEBPACK_IMPORTED_MODULE_6__","bindInputs","layerid","layer","const","visibilityInput","$","on","setVisible","this","checked","prop","getVisible","opacityInput","setOpacity","parseFloat","value","val","String","getOpacity","layers","source","url","crossOrigin","target","view","center","Object","zoom","getLayers","forEach","i","sublayer","j","click","siblings","toggle","hide"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,GAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAA,IAmCA,SAASU,EAAWC,EAASC,GAC3BC,IAAMC,EAAkBC,EAAEJ,EAAU,kBACpCG,EAAgBE,GAAG,SAAU,WAC3BJ,EAAMK,WAAWC,KAAKC,WAExBL,EAAgBM,KAAK,UAAWR,EAAMS,cAEtCR,IAAMS,EAAeP,EAAEJ,EAAU,kBACjCW,EAAaN,GAAG,eAAgB,WAC9BJ,EAAMW,WAAWC,WAAWN,KAAKO,UAEnCH,EAAaI,IAAIC,OAAOf,EAAMgB,eAvCpB,IAAIzB,EAAA,EAAI,CAClB0B,OAAQ,CACN,IAAIxB,EAAA,EAAU,CACZyB,OAAQ,IAAItB,EAAA,IACV,IAAIF,EAAA,EAAW,CACjBuB,OAAQ,CACN,IAAIxB,EAAA,EAAU,CACZyB,OAAQ,IAAIrB,EAAA,EAAS,CACnBsB,IAAK,wFACLC,YAAa,gBAGjB,IAAI3B,EAAA,EAAU,CACZyB,OAAQ,IAAIrB,EAAA,EAAS,CACnBsB,IAAK,yEACLC,YAAa,oBAMvBC,OAAQ,MACRC,KAAM,IAAI9B,EAAA,EAAK,CACb+B,OAAQC,OAAA7B,EAAA,EAAA6B,CAAW,CAAC,QAAU,UAC9BC,KAAM,MAiBNC,YAAYC,QAAQ,SAAS3B,EAAO4B,GACtC9B,EAAW,SAAW8B,EAAG5B,GACrBA,aAAiBN,EAAA,GACnBM,EAAM0B,YAAYC,QAAQ,SAASE,EAAUC,GAC3ChC,EAAW,SAAW8B,EAAIE,EAAGD,OAKnC1B,EAAE,wBAAwB4B,MAAM,WAC9B5B,EAAEG,MAAM0B,SAAS,YAAYC,WAC5BD,SAAS,YAAYE","file":"layer-group.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {Group as LayerGroup, Tile as TileLayer} from '../src/ol/layer.js';\nimport {fromLonLat} from '../src/ol/proj.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport TileJSON from '../src/ol/source/TileJSON.js';\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    }), new LayerGroup({\n      layers: [\n        new TileLayer({\n          source: new TileJSON({\n            url: 'https://api.tiles.mapbox.com/v3/mapbox.20110804-hoa-foodinsecurity-3month.json?secure',\n            crossOrigin: 'anonymous'\n          })\n        }),\n        new TileLayer({\n          source: new TileJSON({\n            url: 'https://api.tiles.mapbox.com/v3/mapbox.world-borders-light.json?secure',\n            crossOrigin: 'anonymous'\n          })\n        })\n      ]\n    })\n  ],\n  target: 'map',\n  view: new View({\n    center: fromLonLat([37.40570, 8.81566]),\n    zoom: 4\n  })\n});\n\nfunction bindInputs(layerid, layer) {\n  const visibilityInput = $(layerid + ' input.visible');\n  visibilityInput.on('change', function() {\n    layer.setVisible(this.checked);\n  });\n  visibilityInput.prop('checked', layer.getVisible());\n\n  const opacityInput = $(layerid + ' input.opacity');\n  opacityInput.on('input change', function() {\n    layer.setOpacity(parseFloat(this.value));\n  });\n  opacityInput.val(String(layer.getOpacity()));\n}\nmap.getLayers().forEach(function(layer, i) {\n  bindInputs('#layer' + i, layer);\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(function(sublayer, j) {\n      bindInputs('#layer' + i + j, sublayer);\n    });\n  }\n});\n\n$('#layertree li > span').click(function() {\n  $(this).siblings('fieldset').toggle();\n}).siblings('fieldset').hide();\n"],"sourceRoot":""}