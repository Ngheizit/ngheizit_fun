{"version":3,"sources":["webpack:///./dynamic-data.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_geom_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_geom_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_source_OSM_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_6__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_7__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_8__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_9__","map","layers","source","target","view","center","zoom","imageStyle","image","radius","fill","color","stroke","width","headInnerImageStyle","headOuterImageStyle","on","event","const","i","vectorContext","frameState","theta","Math","PI","time","coordinates","t","x","cos","y","sin","push","setStyle","drawGeometry","headPoint","length","render"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,IAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAA,IAAAU,EAAAV,EAAA,IAAAW,EAAAX,EAAA,IAAAY,EAAAZ,EAAA,IAQMa,EAAM,IAAIV,EAAA,EAAI,CAClBW,OAAQ,CACN,IAAIP,EAAA,EAAU,CACZQ,OAAQ,IAAIP,EAAA,KAGhBQ,OAAQ,MACRC,KAAM,IAAIb,EAAA,EAAK,CACbc,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EAAa,IAAIX,EAAA,EAAM,CAC3BY,MAAO,IAAIX,EAAA,EAAY,CACrBY,OAAQ,EACRC,KAAM,IAAIZ,EAAA,EAAK,CAACa,MAAO,WACvBC,OAAQ,IAAIb,EAAA,EAAO,CAACY,MAAO,MAAOE,MAAO,QAIvCC,EAAsB,IAAIlB,EAAA,EAAM,CACpCY,MAAO,IAAIX,EAAA,EAAY,CACrBY,OAAQ,EACRC,KAAM,IAAIZ,EAAA,EAAK,CAACa,MAAO,aAIrBI,EAAsB,IAAInB,EAAA,EAAM,CACpCY,MAAO,IAAIX,EAAA,EAAY,CACrBY,OAAQ,EACRC,KAAM,IAAIZ,EAAA,EAAK,CAACa,MAAO,cAOrBvB,EAAI,IAEVY,EAAIgB,GAAG,cAAe,SAASC,GAC7BC,IAIIC,EAJEC,EAAgBH,EAAMG,cACtBC,EAAaJ,EAAMI,WACnBC,EAAQ,EAAIC,KAAKC,GAAKH,EAAWI,KAPtB,IAQXC,EAAc,GAEpB,IAAKP,EAAI,EAAGA,EAXJ,MAWaA,EAAG,CACtBD,IAAMS,EAAIL,EAAQ,EAAIC,KAAKC,GAAKL,EAZ1B,IAaAS,EAAI,IAAUL,KAAKM,IAAIF,GATvB,IASgCJ,KAAKM,IAAI,IAAUF,EAAIvC,GACvD0C,EAAI,IAAUP,KAAKQ,IAAIJ,GAVvB,IAUgCJ,KAAKQ,IAAI,IAAUJ,EAAIvC,GAC7DsC,EAAYM,KAAK,CAACJ,EAAGE,IAEvBV,EAAca,SAAS1B,GACvBa,EAAcc,aAAa,IAAI1C,EAAA,EAAWkC,IAE1CR,IAAMiB,EAAY,IAAI1C,EAAA,EAAMiC,EAAYA,EAAYU,OAAS,IAE7DhB,EAAca,SAASlB,GACvBK,EAAcc,aAAaC,GAE3Bf,EAAca,SAASnB,GACvBM,EAAcc,aAAaC,GAE3BnC,EAAIqC,WAENrC,EAAIqC","file":"dynamic-data.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {MultiPoint, Point} from '../src/ol/geom.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\n\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    })\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\nconst imageStyle = new Style({\n  image: new CircleStyle({\n    radius: 5,\n    fill: new Fill({color: 'yellow'}),\n    stroke: new Stroke({color: 'red', width: 1})\n  })\n});\n\nconst headInnerImageStyle = new Style({\n  image: new CircleStyle({\n    radius: 2,\n    fill: new Fill({color: 'blue'})\n  })\n});\n\nconst headOuterImageStyle = new Style({\n  image: new CircleStyle({\n    radius: 5,\n    fill: new Fill({color: 'black'})\n  })\n});\n\nconst n = 200;\nconst omegaTheta = 30000; // Rotation period in ms\nconst R = 7e6;\nconst r = 2e6;\nconst p = 2e6;\nmap.on('postcompose', function(event) {\n  const vectorContext = event.vectorContext;\n  const frameState = event.frameState;\n  const theta = 2 * Math.PI * frameState.time / omegaTheta;\n  const coordinates = [];\n  let i;\n  for (i = 0; i < n; ++i) {\n    const t = theta + 2 * Math.PI * i / n;\n    const x = (R + r) * Math.cos(t) + p * Math.cos((R + r) * t / r);\n    const y = (R + r) * Math.sin(t) + p * Math.sin((R + r) * t / r);\n    coordinates.push([x, y]);\n  }\n  vectorContext.setStyle(imageStyle);\n  vectorContext.drawGeometry(new MultiPoint(coordinates));\n\n  const headPoint = new Point(coordinates[coordinates.length - 1]);\n\n  vectorContext.setStyle(headOuterImageStyle);\n  vectorContext.drawGeometry(headPoint);\n\n  vectorContext.setStyle(headInnerImageStyle);\n  vectorContext.drawGeometry(headPoint);\n\n  map.render();\n});\nmap.render();\n"],"sourceRoot":""}