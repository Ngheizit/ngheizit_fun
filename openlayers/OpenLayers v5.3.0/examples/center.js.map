{"version":3,"sources":["webpack:///./center.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_6__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_7__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_8__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_9__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_10__","source","url","format","style","fill","color","stroke","width","image","radius","vectorLayer","view","center","zoom","map","layers","target","document","getElementById","addEventListener","const","polygon","getFeatures","getGeometry","fit","padding","constrainResolution","nearest","point","minResolution","size","getSize","centerOn","getCoordinates"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,IAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAA,IAAAU,EAAAV,EAAA,IAAAW,EAAAX,EAAA,IAAAY,EAAAZ,EAAA,IAAAa,EAAAb,EAAA,IAOMc,EAAS,IAAIN,EAAA,EAAa,CAC9BO,IAAK,mCACLC,OAAQ,IAAIX,EAAA,IAERY,EAAQ,IAAIP,EAAA,EAAM,CACtBQ,KAAM,IAAIP,EAAA,EAAK,CACbQ,MAAO,6BAETC,OAAQ,IAAIR,EAAA,EAAO,CACjBO,MAAO,UACPE,MAAO,IAETC,MAAO,IAAIT,EAAA,EAAY,CACrBU,OAAQ,EACRL,KAAM,IAAIP,EAAA,EAAK,CACbQ,MAAO,6BAETC,OAAQ,IAAIR,EAAA,EAAO,CACjBO,MAAO,UACPE,MAAO,QAIPG,EAAc,IAAIlB,EAAA,EAAY,CAClCQ,OAAQA,EACRG,MAAOA,IAEHQ,EAAO,IAAIrB,EAAA,EAAK,CACpBsB,OAAQ,CAAC,EAAG,GACZC,KAAM,IAEFC,EAAM,IAAIzB,EAAA,EAAI,CAClB0B,OAAQ,CACN,IAAItB,EAAA,EAAU,CACZO,OAAQ,IAAIL,EAAA,IAEde,GAEFM,OAAQ,MACRL,KAAMA,IAGsBM,SAASC,eAAe,yBAChCC,iBAAiB,QAAS,WAC9CC,IACMC,EADUrB,EAAOsB,cAAc,GACgDC,cACrFZ,EAAKa,IAAIH,EAAS,CAACI,QAAS,CAAC,IAAK,GAAI,GAAI,KAAMC,qBAAqB,MACpE,GAGCT,SAASC,eAAe,gCACCC,iBAAiB,QAAS,WACrDC,IACMC,EADUrB,EAAOsB,cAAc,GACgDC,cACrFZ,EAAKa,IAAIH,EAAS,CAACI,QAAS,CAAC,IAAK,GAAI,GAAI,SACzC,GAGCR,SAASC,eAAe,4BACHC,iBAAiB,QAAS,WACjDC,IACMC,EADUrB,EAAOsB,cAAc,GACgDC,cACrFZ,EAAKa,IAAIH,EAAS,CAACI,QAAS,CAAC,IAAK,GAAI,GAAI,KAAME,SAAS,MACxD,GAEoBV,SAASC,eAAe,kBAChCC,iBAAiB,QAAS,WACvCC,IACMQ,EADU5B,EAAOsB,cAAc,GAC8CC,cACnFZ,EAAKa,IAAII,EAAO,CAACH,QAAS,CAAC,IAAK,GAAI,GAAI,KAAMI,cAAe,OAC5D,GAEoBZ,SAASC,eAAe,kBAChCC,iBAAiB,QAAS,WACvCC,IACMQ,EADU5B,EAAOsB,cAAc,GAC4BC,cAC3DO,EAA2ChB,EAAIiB,UACrDpB,EAAKqB,SAASJ,EAAMK,iBAAkBH,EAAM,CAAC,IAAK,QACjD","file":"center.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\n\nconst source = new VectorSource({\n  url: 'data/geojson/switzerland.geojson',\n  format: new GeoJSON()\n});\nconst style = new Style({\n  fill: new Fill({\n    color: 'rgba(255, 255, 255, 0.6)'\n  }),\n  stroke: new Stroke({\n    color: '#319FD3',\n    width: 1\n  }),\n  image: new CircleStyle({\n    radius: 5,\n    fill: new Fill({\n      color: 'rgba(255, 255, 255, 0.6)'\n    }),\n    stroke: new Stroke({\n      color: '#319FD3',\n      width: 1\n    })\n  })\n});\nconst vectorLayer = new VectorLayer({\n  source: source,\n  style: style\n});\nconst view = new View({\n  center: [0, 0],\n  zoom: 1\n});\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    }),\n    vectorLayer\n  ],\n  target: 'map',\n  view: view\n});\n\nconst zoomtoswitzerlandbest = document.getElementById('zoomtoswitzerlandbest');\nzoomtoswitzerlandbest.addEventListener('click', function() {\n  const feature = source.getFeatures()[0];\n  const polygon = /** @type {module:ol/geom/SimpleGeometry~SimpleGeometry} */ (feature.getGeometry());\n  view.fit(polygon, {padding: [170, 50, 30, 150], constrainResolution: false});\n}, false);\n\nconst zoomtoswitzerlandconstrained =\n    document.getElementById('zoomtoswitzerlandconstrained');\nzoomtoswitzerlandconstrained.addEventListener('click', function() {\n  const feature = source.getFeatures()[0];\n  const polygon = /** @type {module:ol/geom/SimpleGeometry~SimpleGeometry} */ (feature.getGeometry());\n  view.fit(polygon, {padding: [170, 50, 30, 150]});\n}, false);\n\nconst zoomtoswitzerlandnearest =\n    document.getElementById('zoomtoswitzerlandnearest');\nzoomtoswitzerlandnearest.addEventListener('click', function() {\n  const feature = source.getFeatures()[0];\n  const polygon = /** @type {module:ol/geom/SimpleGeometry~SimpleGeometry} */ (feature.getGeometry());\n  view.fit(polygon, {padding: [170, 50, 30, 150], nearest: true});\n}, false);\n\nconst zoomtolausanne = document.getElementById('zoomtolausanne');\nzoomtolausanne.addEventListener('click', function() {\n  const feature = source.getFeatures()[1];\n  const point = /** @type {module:ol/geom/SimpleGeometry~SimpleGeometry} */ (feature.getGeometry());\n  view.fit(point, {padding: [170, 50, 30, 150], minResolution: 50});\n}, false);\n\nconst centerlausanne = document.getElementById('centerlausanne');\ncenterlausanne.addEventListener('click', function() {\n  const feature = source.getFeatures()[1];\n  const point = /** @type {module:ol/geom/Point~Point} */ (feature.getGeometry());\n  const size = /** @type {module:ol/size~Size} */ (map.getSize());\n  view.centerOn(point.getCoordinates(), size, [570, 500]);\n}, false);\n"],"sourceRoot":""}