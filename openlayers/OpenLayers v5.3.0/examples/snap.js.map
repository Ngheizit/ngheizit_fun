{"version":3,"sources":["webpack:///./snap.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_6__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_7__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_8__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_9__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_10__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_11__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_12__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_13__","raster","source","vector","style","fill","color","stroke","width","image","radius","map","layers","target","view","center","zoom","ExampleModify","init","this","select","addInteraction","modify","features","getFeatures","setEvents","const","selectedFeatures","on","forEach","each","remove","setActive","active","optionsForm","document","getElementById","ExampleDraw","Point","LineString","Polygon","Circle","getSource","type","getActive","activeType","elements","value","onchange","e","getAttribute","snap"],"mappings":"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","file":"snap.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {Draw, Modify, Select, Snap} from '../src/ol/interaction.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\n\nconst raster = new TileLayer({\n  source: new OSM()\n});\n\nconst vector = new VectorLayer({\n  source: new VectorSource(),\n  style: new Style({\n    fill: new Fill({\n      color: 'rgba(255, 255, 255, 0.2)'\n    }),\n    stroke: new Stroke({\n      color: '#ffcc33',\n      width: 2\n    }),\n    image: new CircleStyle({\n      radius: 7,\n      fill: new Fill({\n        color: '#ffcc33'\n      })\n    })\n  })\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [-11000000, 4600000],\n    zoom: 4\n  })\n});\n\nconst ExampleModify = {\n  init: function() {\n    this.select = new Select();\n    map.addInteraction(this.select);\n\n    this.modify = new Modify({\n      features: this.select.getFeatures()\n    });\n    map.addInteraction(this.modify);\n\n    this.setEvents();\n  },\n  setEvents: function() {\n    const selectedFeatures = this.select.getFeatures();\n\n    this.select.on('change:active', function() {\n      selectedFeatures.forEach(function(each) {\n        selectedFeatures.remove(each);\n      });\n    });\n  },\n  setActive: function(active) {\n    this.select.setActive(active);\n    this.modify.setActive(active);\n  }\n};\nExampleModify.init();\n\nconst optionsForm = document.getElementById('options-form');\n\nconst ExampleDraw = {\n  init: function() {\n    map.addInteraction(this.Point);\n    this.Point.setActive(false);\n    map.addInteraction(this.LineString);\n    this.LineString.setActive(false);\n    map.addInteraction(this.Polygon);\n    this.Polygon.setActive(false);\n    map.addInteraction(this.Circle);\n    this.Circle.setActive(false);\n  },\n  Point: new Draw({\n    source: vector.getSource(),\n    type: 'Point'\n  }),\n  LineString: new Draw({\n    source: vector.getSource(),\n    type: 'LineString'\n  }),\n  Polygon: new Draw({\n    source: vector.getSource(),\n    type: 'Polygon'\n  }),\n  Circle: new Draw({\n    source: vector.getSource(),\n    type: 'Circle'\n  }),\n  getActive: function() {\n    return this.activeType ? this[this.activeType].getActive() : false;\n  },\n  setActive: function(active) {\n    const type = optionsForm.elements['draw-type'].value;\n    if (active) {\n      this.activeType && this[this.activeType].setActive(false);\n      this[type].setActive(true);\n      this.activeType = type;\n    } else {\n      this.activeType && this[this.activeType].setActive(false);\n      this.activeType = null;\n    }\n  }\n};\nExampleDraw.init();\n\n\n/**\n * Let user change the geometry type.\n * @param {Event} e Change event.\n */\noptionsForm.onchange = function(e) {\n  const type = e.target.getAttribute('name');\n  const value = e.target.value;\n  if (type == 'draw-type') {\n    ExampleDraw.getActive() && ExampleDraw.setActive(true);\n  } else if (type == 'interaction') {\n    if (value == 'modify') {\n      ExampleDraw.setActive(false);\n      ExampleModify.setActive(true);\n    } else if (value == 'draw') {\n      ExampleDraw.setActive(true);\n      ExampleModify.setActive(false);\n    }\n  }\n};\n\nExampleDraw.setActive(true);\nExampleModify.setActive(false);\n\n// The snap interaction must be added after the Modify and Draw interactions\n// in order for its map browser event handlers to be fired first. Its handlers\n// are responsible of doing the snapping.\nconst snap = new Snap({\n  source: vector.getSource()\n});\nmap.addInteraction(snap);\n"],"sourceRoot":""}