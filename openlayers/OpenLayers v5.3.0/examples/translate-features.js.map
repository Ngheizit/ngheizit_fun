{"version":3,"sources":["webpack:///../src/ol/interaction/Translate.js","webpack:///./translate-features.js"],"names":["_Collection_js__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_Object_js__WEBPACK_IMPORTED_MODULE_1__","_events_js__WEBPACK_IMPORTED_MODULE_2__","_events_Event_js__WEBPACK_IMPORTED_MODULE_3__","_functions_js__WEBPACK_IMPORTED_MODULE_4__","_array_js__WEBPACK_IMPORTED_MODULE_5__","_Pointer_js__WEBPACK_IMPORTED_MODULE_6__","_Property_js__WEBPACK_IMPORTED_MODULE_7__","TranslateEventType","TranslateEvent","Event","type","features","coordinate","super","this","constructor","Translate","PointerInteraction","opt_options","const","layerFilter","options","lastCoordinate_","features_","undefined","layers","layer","Object","layerFilter_","hitTolerance_","hitTolerance","lastFeature_","ACTIVE","handleActiveChanged_","handleDownEvent","event","featuresAtPixel_","pixel","map","handleMoveEvent","dispatchEvent","handleUpEvent","handleDragEvent","newCoordinate","deltaX","deltaY","forEach","feature","geom","getGeometry","translate","setGeometry","elem","getViewport","classList","remove","add","forEachFeatureAtPixel","getArray","bind","getHitTolerance","setHitTolerance","setMap","oldMap","getMap","call","updateState_","let","active","getActive","__webpack_exports__","r","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_6__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_7__","_src_ol_source_OSM_js__WEBPACK_IMPORTED_MODULE_8__","_src_ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_9__","raster","source","vector","url","format","select","getFeatures","interactions","extend","target","view","center","zoom"],"mappings":"4FAAA,IAAAA,EAAAC,EAAA,IAAAC,EAAAD,EAAA,IAAAE,EAAAF,EAAA,GAAAG,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,IAAAK,EAAAL,EAAA,IAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,KAgBMQ,EAMY,iBANZA,EAYS,cAZTA,EAkBU,eAwBHC,EAA4B,SAAAC,GAMvC,SAAAD,EAAYE,EAAMC,EAAUC,GAE1BC,OAAKC,KAACJ,GAONI,KAAKH,SAAWA,EAQhBG,KAAKF,WAAaA,wEAEnBG,YAAAP,EAzBsC,CAALN,EAAA,GAqC9Bc,EAAoC,SAAAC,GAIxC,SAAAD,EAAYE,GACVC,IAmBIC,EAnBEC,EAAUH,GAA4B,GAoB5C,GAlBAL,OAAKC,KAA+C,GAOpDA,KAAKQ,gBAAkB,KAOvBR,KAAKS,eAAiCC,IAArBH,EAAQV,SAAyBU,EAAQV,SAAW,KAIjEU,EAAQI,OACV,GAA8B,mBAAnBJ,EAAQI,OACjBL,EAAcC,EAAQI,WACjB,CACLN,IAAMM,EAASJ,EAAQI,OACvBL,EAAc,SAASM,GACrB,OAAOC,OAAAvB,EAAA,EAAAuB,CAASF,EAAQC,SAI5BN,EAAcjB,EAAA,EAOhBW,KAAKc,aAAeR,EAMpBN,KAAKe,cAAgBR,EAAQS,aAAeT,EAAQS,aAAe,EAMnEhB,KAAKiB,aAAe,KAEpBJ,OAAA1B,EAAA,EAAA0B,CAAOb,KACLa,OAAA3B,EAAA,EAAA2B,CAAmBrB,EAAA,EAAoB0B,QACvClB,KAAKmB,qBAAsBnB,sGAO/BoB,gBAAA,SAAgBC,GAEd,GADArB,KAAKiB,aAAejB,KAAKsB,iBAAiBD,EAAME,MAAOF,EAAMG,KACxDxB,KAAKQ,kBAAmBR,KAAKiB,aAYlC,OAAO,EAXLjB,KAAKQ,gBAAkBa,EAAMvB,WAC7BE,KAAKyB,gBAAgBJ,GAErBhB,IAAMR,EAAWG,KAAKS,WAAa,IAAIzB,EAAA,EAAW,CAACgB,KAAKiB,eAMxD,OAJAjB,KAAK0B,cACH,IAAIhC,EACFD,EAAmCI,EACnCwB,EAAMvB,cACH,eAQX6B,cAAA,SAAcN,GACZ,GAAIrB,KAAKQ,gBAAiB,CACxBR,KAAKQ,gBAAkB,KACvBR,KAAKyB,gBAAgBJ,GAErBhB,IAAMR,EAAWG,KAAKS,WAAa,IAAIzB,EAAA,EAAW,CAACgB,KAAKiB,eAMxD,OAJAjB,KAAK0B,cACH,IAAIhC,EACFD,EAAiCI,EACjCwB,EAAMvB,cACH,EAET,OAAO,eAMT8B,gBAAA,SAAgBP,GACd,GAAIrB,KAAKQ,gBAAiB,CACxBH,IAAMwB,EAAgBR,EAAMvB,WACtBgC,EAASD,EAAc,GAAK7B,KAAKQ,gBAAgB,GACjDuB,EAASF,EAAc,GAAK7B,KAAKQ,gBAAgB,GAEjDX,EAAWG,KAAKS,WAAa,IAAIzB,EAAA,EAAW,CAACgB,KAAKiB,eAExDpB,EAASmC,QAAQ,SAASC,GACxB5B,IAAM6B,EAAOD,EAAQE,cACrBD,EAAKE,UAAUN,EAAQC,GACvBE,EAAQI,YAAYH,KAGtBlC,KAAKQ,gBAAkBqB,EACvB7B,KAAK0B,cACH,IAAIhC,EACFD,EAAgCI,EAChCgC,kBAORJ,gBAAA,SAAgBJ,GACdhB,IAAMiC,EAAOjB,EAAMG,IAAIe,cAInBvC,KAAKsB,iBAAiBD,EAAME,MAAOF,EAAMG,MAC3Cc,EAAKE,UAAUC,OAAOzC,KAAKQ,gBAAkB,UAAY,eACzD8B,EAAKE,UAAUE,IAAI1C,KAAKQ,gBAAkB,cAAgB,YAE1D8B,EAAKE,UAAUC,OAAO,UAAW,4BAarCnB,iBAAA,SAAiBC,EAAOC,GACtB,OAAOA,EAAImB,sBAAsBpB,EAC/B,SAASU,GACP,IAAKjC,KAAKS,WAAaI,OAAAvB,EAAA,EAAAuB,CAASb,KAAKS,UAAUmC,WAAYX,GACzD,OAAOA,GAETY,KAAK7C,MAAO,CACZM,YAAaN,KAAKc,aAClBE,aAAchB,KAAKe,6BASzB+B,gBAAA,WACE,OAAO9C,KAAKe,2BAUdgC,gBAAA,SAAgB/B,GACdhB,KAAKe,cAAgBC,eAMvBgC,OAAA,SAAOxB,GACLnB,IAAM4C,EAASjD,KAAKkD,SACpBnD,YAAMiD,OAAAG,KAAMnD,KAACwB,GACbxB,KAAKoD,aAAaH,gBAMpB9B,qBAAA,WACEnB,KAAKoD,aAAa,mBAOpBA,aAAA,SAAaH,GACXI,IAAI7B,EAAMxB,KAAKkD,SACTI,EAAStD,KAAKuD,YACf/B,GAAQ8B,IACX9B,EAAMA,GAAOyB,IAEEzB,EAAIe,cACZC,UAAUC,OAAO,UAAW,kBAlNC,CAAlBlD,EAAA,GAwNTiE,EAAA,sCCvTfvE,EAAAwE,EAAAD,GAAA,IAAAE,EAAAzE,EAAA,GAAA0E,EAAA1E,EAAA,GAAA2E,EAAA3E,EAAA,IAAA4E,EAAA5E,EAAA,IAAA6E,EAAA7E,EAAA,KAAA8E,EAAA9E,EAAA,IAAA+E,EAAA/E,EAAA,GAAAgF,EAAAhF,EAAA,IAAAiF,EAAAjF,EAAA,IAAAkF,EAAAlF,EAAA,IASMmF,EAAS,IAAIJ,EAAA,EAAU,CAC3BK,OAAQ,IAAIH,EAAA,IAGRI,EAAS,IAAIL,EAAA,EAAY,CAC7BI,OAAQ,IAAIF,EAAA,EAAa,CACvBI,IAAK,iCACLC,OAAQ,IAAIZ,EAAA,MAIVa,EAAS,IAAIZ,EAAA,EAEbzB,EAAY,IAAI0B,EAAA,EAAU,CAC9BjE,SAAU4E,EAAOC,gBAGP,IAAIhB,EAAA,EAAI,CAClBiB,aAAc9D,OAAAkD,EAAA,EAAAlD,GAAsB+D,OAAO,CAACH,EAAQrC,IACpDzB,OAAQ,CAACyD,EAAQE,GACjBO,OAAQ,MACRC,KAAM,IAAInB,EAAA,EAAK,CACboB,OAAQ,CAAC,EAAG,GACZC,KAAM","file":"translate-features.js","sourcesContent":["/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   */\n  constructor(type, features, coordinate) {\n\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {import(\"../Feature.js\").default}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.handleActiveChanged_, this);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(event) {\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART, features,\n          event.coordinate));\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND, features,\n          event.coordinate));\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n      const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      features.forEach(function(feature) {\n        const geom = feature.getGeometry();\n        geom.translate(deltaX, deltaY);\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING, features,\n          newCoordinate));\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(pixel,\n      function(feature) {\n        if (!this.features_ || includes(this.features_.getArray(), feature)) {\n          return feature;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport {defaults as defaultInteractions, Select, Translate} from '../src/ol/interaction.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport VectorSource from '../src/ol/source/Vector.js';\n\n\nconst raster = new TileLayer({\n  source: new OSM()\n});\n\nconst vector = new VectorLayer({\n  source: new VectorSource({\n    url: 'data/geojson/countries.geojson',\n    format: new GeoJSON()\n  })\n});\n\nconst select = new Select();\n\nconst translate = new Translate({\n  features: select.getFeatures()\n});\n\nconst map = new Map({\n  interactions: defaultInteractions().extend([select, translate]),\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n"],"sourceRoot":""}