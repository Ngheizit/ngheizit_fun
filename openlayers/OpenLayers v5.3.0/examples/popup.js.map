{"version":3,"sources":["webpack:///./popup.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_Overlay_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_coordinate_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_proj_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_source_TileJSON_js__WEBPACK_IMPORTED_MODULE_6__","container","document","getElementById","content","closer","overlay","element","autoPan","autoPanAnimation","duration","onclick","setPosition","undefined","blur","layers","source","url","crossOrigin","overlays","target","view","center","zoom","on","evt","const","coordinate","hdms","Object","innerHTML"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,IAAAK,EAAAL,EAAA,GAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAA,GAAAS,EAAAT,EAAA,IAYMU,EAAYC,SAASC,eAAe,SACpCC,EAAUF,SAASC,eAAe,iBAClCE,EAASH,SAASC,eAAe,gBAMjCG,EAAU,IAAIX,EAAA,EAAQ,CAC1BY,QAASN,EACTO,SAAS,EACTC,iBAAkB,CAChBC,SAAU,OASdL,EAAOM,QAAU,WAGf,OAFAL,EAAQM,iBAAYC,GACpBR,EAAOS,QACA,GAOG,IAAIpB,EAAA,EAAI,CAClBqB,OAAQ,CACN,IAAIjB,EAAA,EAAU,CACZkB,OAAQ,IAAIhB,EAAA,EAAS,CACnBiB,IAAK,+EACLC,YAAa,iBAInBC,SAAU,CAACb,GACXc,OAAQ,MACRC,KAAM,IAAIzB,EAAA,EAAK,CACb0B,OAAQ,CAAC,EAAG,GACZC,KAAM,MAQNC,GAAG,cAAe,SAASC,GAC7BC,IAAMC,EAAaF,EAAIE,WACjBC,EAAOC,OAAAhC,EAAA,EAAAgC,CAAaA,OAAA9B,EAAA,EAAA8B,CAASF,IAEnCvB,EAAQ0B,UAAY,iCAAmCF,EACnD,UACJtB,EAAQM,YAAYe","file":"popup.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport Overlay from '../src/ol/Overlay.js';\nimport View from '../src/ol/View.js';\nimport {toStringHDMS} from '../src/ol/coordinate.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport {toLonLat} from '../src/ol/proj.js';\nimport TileJSON from '../src/ol/source/TileJSON.js';\n\n\n/**\n * Elements that make up the popup.\n */\nconst container = document.getElementById('popup');\nconst content = document.getElementById('popup-content');\nconst closer = document.getElementById('popup-closer');\n\n\n/**\n * Create an overlay to anchor the popup to the map.\n */\nconst overlay = new Overlay({\n  element: container,\n  autoPan: true,\n  autoPanAnimation: {\n    duration: 250\n  }\n});\n\n\n/**\n * Add a click handler to hide the popup.\n * @return {boolean} Don't follow the href.\n */\ncloser.onclick = function() {\n  overlay.setPosition(undefined);\n  closer.blur();\n  return false;\n};\n\n\n/**\n * Create the map.\n */\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new TileJSON({\n        url: 'https://api.tiles.mapbox.com/v3/mapbox.natural-earth-hypso-bathy.json?secure',\n        crossOrigin: 'anonymous'\n      })\n    })\n  ],\n  overlays: [overlay],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\n\n/**\n * Add a click handler to the map to render the popup.\n */\nmap.on('singleclick', function(evt) {\n  const coordinate = evt.coordinate;\n  const hdms = toStringHDMS(toLonLat(coordinate));\n\n  content.innerHTML = '<p>You clicked here:</p><code>' + hdms +\n      '</code>';\n  overlay.setPosition(coordinate);\n});\n"],"sourceRoot":""}