{"version":3,"sources":["webpack:///./device-orientation.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_math_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_source_OSM_js__WEBPACK_IMPORTED_MODULE_4__","view","center","zoom","layers","source","target","el","id","document","getElementById","const","gn","GyroNorm","init","then","start","event","getCenter","resolution","getResolution","alpha","Object","do","beta","gamma","innerText","setCenter","constrainCenter"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,GAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAMMQ,EAAO,IAAIJ,EAAA,EAAK,CACpBK,OAAQ,CAAC,EAAG,GACZC,KAAM,IAEI,IAAIP,EAAA,EAAI,CAClBQ,OAAQ,CACN,IAAIN,EAAA,EAAU,CACZO,OAAQ,IAAIL,EAAA,KAGhBM,OAAQ,MACRL,KAAMA,IAGR,SAASM,EAAGC,GACV,OAAOC,SAASC,eAAeF,GAIjCG,IAAMC,EAAK,IAAIC,SAEfD,EAAGE,OAAOC,KAAK,WACbH,EAAGI,MAAM,SAASC,GAChBN,IAAMT,EAASD,EAAKiB,YACdC,EAAalB,EAAKmB,gBAClBC,EAAQC,OAAAvB,EAAA,EAAAuB,CAAUL,EAAMM,GAAGC,MAC3BA,EAAOF,OAAAvB,EAAA,EAAAuB,CAAUL,EAAMM,GAAGC,MAC1BC,EAAQH,OAAAvB,EAAA,EAAAuB,CAAUL,EAAMM,GAAGE,OAEjClB,EAAG,SAASmB,UAAYL,EAAQ,SAChCd,EAAG,QAAQmB,UAAYF,EAAO,SAC9BjB,EAAG,SAASmB,UAAYD,EAAQ,SAEhCvB,EAAO,IAAMiB,EAAaM,EAAQ,GAClCvB,EAAO,IAAMiB,EAAaK,EAAO,GAEjCvB,EAAK0B,UAAU1B,EAAK2B,gBAAgB1B","file":"device-orientation.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport {toRadians} from '../src/ol/math.js';\nimport OSM from '../src/ol/source/OSM.js';\n\nconst view = new View({\n  center: [0, 0],\n  zoom: 2\n});\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    })\n  ],\n  target: 'map',\n  view: view\n});\n\nfunction el(id) {\n  return document.getElementById(id);\n}\n\n\nconst gn = new GyroNorm();\n\ngn.init().then(function() {\n  gn.start(function(event) {\n    const center = view.getCenter();\n    const resolution = view.getResolution();\n    const alpha = toRadians(event.do.beta);\n    const beta = toRadians(event.do.beta);\n    const gamma = toRadians(event.do.gamma);\n\n    el('alpha').innerText = alpha + ' [rad]';\n    el('beta').innerText = beta + ' [rad]';\n    el('gamma').innerText = gamma + ' [rad]';\n\n    center[0] -= resolution * gamma * 25;\n    center[1] += resolution * beta * 25;\n\n    view.setCenter(view.constrainCenter(center));\n  });\n});\n"],"sourceRoot":""}