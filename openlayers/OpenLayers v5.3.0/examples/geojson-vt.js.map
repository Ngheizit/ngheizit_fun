{"version":3,"sources":["webpack:///./geojson-vt.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_source_OSM_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_source_VectorTile_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_6__","_src_ol_proj_Projection_js__WEBPACK_IMPORTED_MODULE_7__","replacer","key","value","geometry","let","type","rawType","length","coordinates","properties","tags","tilePixels","code","units","map","layers","source","target","view","center","zoom","fetch","then","response","json","const","tileIndex","geojsonvt","extent","debug","vectorSource","format","tileLoadFunction","tile","getFormat","tileCoord","getTileCoord","data","getTile","features","readFeatures","JSON","stringify","setLoader","setFeatures","setProjection","url","vectorLayer","addLayer"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,IAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,GAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,IASMW,EAAW,SAASC,EAAKC,GAC7B,GAAIA,EAAMC,SAAU,CAClBC,IAAIC,EACEC,EAAUJ,EAAMG,KAClBF,EAAWD,EAAMC,SAsBrB,OApBgB,IAAZG,GACFD,EAAO,aACgB,GAAnBF,EAASI,SACXF,EAAO,QACPF,EAAWA,EAAS,KAED,IAAZG,GACTD,EAAO,kBACgB,GAAnBF,EAASI,SACXF,EAAO,aACPF,EAAWA,EAAS,KAED,IAAZG,IACTD,EAAO,UACe,EAAlBF,EAASI,SACXF,EAAO,eACPF,EAAW,CAACA,KAIT,CACLE,KAAQ,UACRF,SAAY,CACVE,KAAQA,EACRG,YAAeL,GAEjBM,WAAcP,EAAMQ,MAGtB,OAAOR,GAILS,EAAa,IAAIZ,EAAA,EAAW,CAChCa,KAAM,cACNC,MAAO,gBAGHC,EAAM,IAAItB,EAAA,EAAI,CAClBuB,OAAQ,CACN,IAAIlB,EAAA,EAAU,CACZmB,OAAQ,IAAIrB,EAAA,KAGhBsB,OAAQ,MACRC,KAAM,IAAIzB,EAAA,EAAK,CACb0B,OAAQ,CAAC,EAAG,GACZC,KAAM,MAKVC,MADY,kCACDC,KAAK,SAASC,GACvB,OAAOA,EAASC,SACfF,KAAK,SAASE,GACfC,IAAMC,EAAYC,UAAUH,EAAM,CAChCI,OAAQ,KACRC,MAAO,IAEHC,EAAe,IAAIlC,EAAA,EAAiB,CACxCmC,OAAQ,IAAIrC,EAAA,EACZsC,iBAAkB,SAASC,GACzBR,IAAMM,EAASE,EAAKC,YACdC,EAAYF,EAAKG,eACjBC,EAAOX,EAAUY,QAAQH,EAAU,GAAIA,EAAU,IAAKA,EAAU,GAAK,GAErEI,EAAWR,EAAOS,aACtBC,KAAKC,UAAU,CACbrC,KAAM,oBACNkC,SAAUF,EAAOA,EAAKE,SAAW,IAChCvC,IACLiC,EAAKU,UAAU,WACbV,EAAKW,YAAYL,GACjBN,EAAKY,cAAclC,MAGvBmC,IAAK,UAEDC,EAAc,IAAIjD,EAAA,EAAgB,CACtCkB,OAAQc,IAEVhB,EAAIkC,SAASD","file":"geojson-vt.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport VectorTileSource from '../src/ol/source/VectorTile.js';\nimport {Tile as TileLayer, VectorTile as VectorTileLayer} from '../src/ol/layer.js';\nimport Projection from '../src/ol/proj/Projection.js';\n\n\nconst replacer = function(key, value) {\n  if (value.geometry) {\n    let type;\n    const rawType = value.type;\n    let geometry = value.geometry;\n\n    if (rawType === 1) {\n      type = 'MultiPoint';\n      if (geometry.length == 1) {\n        type = 'Point';\n        geometry = geometry[0];\n      }\n    } else if (rawType === 2) {\n      type = 'MultiLineString';\n      if (geometry.length == 1) {\n        type = 'LineString';\n        geometry = geometry[0];\n      }\n    } else if (rawType === 3) {\n      type = 'Polygon';\n      if (geometry.length > 1) {\n        type = 'MultiPolygon';\n        geometry = [geometry];\n      }\n    }\n\n    return {\n      'type': 'Feature',\n      'geometry': {\n        'type': type,\n        'coordinates': geometry\n      },\n      'properties': value.tags\n    };\n  } else {\n    return value;\n  }\n};\n\nconst tilePixels = new Projection({\n  code: 'TILE_PIXELS',\n  units: 'tile-pixels'\n});\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    })\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\nconst url = 'data/geojson/countries.geojson';\nfetch(url).then(function(response) {\n  return response.json();\n}).then(function(json) {\n  const tileIndex = geojsonvt(json, {\n    extent: 4096,\n    debug: 1\n  });\n  const vectorSource = new VectorTileSource({\n    format: new GeoJSON(),\n    tileLoadFunction: function(tile) {\n      const format = tile.getFormat();\n      const tileCoord = tile.getTileCoord();\n      const data = tileIndex.getTile(tileCoord[0], tileCoord[1], -tileCoord[2] - 1);\n\n      const features = format.readFeatures(\n        JSON.stringify({\n          type: 'FeatureCollection',\n          features: data ? data.features : []\n        }, replacer));\n      tile.setLoader(function() {\n        tile.setFeatures(features);\n        tile.setProjection(tilePixels);\n      });\n    },\n    url: 'data:' // arbitrary url, we don't use it in the tileLoadFunction\n  });\n  const vectorLayer = new VectorTileLayer({\n    source: vectorSource\n  });\n  map.addLayer(vectorLayer);\n});\n"],"sourceRoot":""}