{"version":3,"sources":["webpack:///./export-pdf.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_format_WKT_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_6__","raster","source","feature","readFeature","getGeometry","transform","const","vector","features","map","layers","target","view","center","zoom","dims","a0","a1","a2","a3","a4","a5","exportButton","document","getElementById","addEventListener","disabled","body","style","cursor","format","value","resolution","dim","width","Math","round","height","size","getSize","extent","getView","calculateExtent","once","event","data","context","canvas","toDataURL","pdf","jsPDF","undefined","addImage","save","setSize","fit","printSize"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAA,IAMMU,EAAS,IAAIJ,EAAA,EAAU,CAC3BK,OAAQ,IAAIH,EAAA,IAIRI,GADS,IAAIP,EAAA,GACIQ,YACrB,6KAGFD,EAAQE,cAAcC,UAAU,YAAa,aAE7CC,IAAMC,EAAS,IAAIV,EAAA,EAAY,CAC7BI,OAAQ,IAAIF,EAAA,EAAa,CACvBS,SAAU,CAACN,OAKTO,EAAM,IAAIhB,EAAA,EAAI,CAClBiB,OAAQ,CAACV,EAAQO,GACjBI,OAAQ,MACRC,KAAM,IAAIlB,EAAA,EAAK,CACbmB,OAAQ,CAAC,EAAG,GACZC,KAAM,MAKJC,EAAO,CACXC,GAAI,CAAC,KAAM,KACXC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,MAGNC,EAAeC,SAASC,eAAe,cAE7CF,EAAaG,iBAAiB,QAAS,WAErCH,EAAaI,UAAW,EACxBH,SAASI,KAAKC,MAAMC,OAAS,WAE7BvB,IAAMwB,EAASP,SAASC,eAAe,UAAUO,MAC3CC,EAAaT,SAASC,eAAe,cAAcO,MACnDE,EAAMlB,EAAKe,GACXI,EAAQC,KAAKC,MAAMH,EAAI,GAAKD,EAAa,MACzCK,EAASF,KAAKC,MAAMH,EAAI,GAAKD,EAAa,MAC1CM,EAA2C7B,EAAI8B,UAC/CC,EAAS/B,EAAIgC,UAAUC,gBAAgBJ,GAE7C7B,EAAIkC,KAAK,iBAAkB,SAASC,GAClCtC,IACMuC,EADSD,EAAME,QAAQC,OACTC,UAAU,cACxBC,EAAM,IAAIC,MAAM,iBAAaC,EAAWrB,GAC9CmB,EAAIG,SAASP,EAAM,OAAQ,EAAG,EAAGZ,EAAI,GAAIA,EAAI,IAC7CgB,EAAII,KAAK,WAET5C,EAAI6C,QAAQhB,GACZ7B,EAAIgC,UAAUc,IAAIf,EAAQ,CAAAF,KAACA,IAC3BhB,EAAaI,UAAW,EACxBH,SAASI,KAAKC,MAAMC,OAAS,SAI/BvB,IAAMkD,EAAY,CAACtB,EAAOG,GAC1B5B,EAAI6C,QAAQE,GACZ/C,EAAIgC,UAAUc,IAAIf,EAAQ,CAACF,KAAMkB,MAEhC","file":"export-pdf.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport WKT from '../src/ol/format/WKT.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\n\nconst raster = new TileLayer({\n  source: new OSM()\n});\n\nconst format = new WKT();\nconst feature = format.readFeature(\n  'POLYGON((10.689697265625 -25.0927734375, 34.595947265625 ' +\n        '-20.1708984375, 38.814697265625 -35.6396484375, 13.502197265625 ' +\n        '-39.1552734375, 10.689697265625 -25.0927734375))');\nfeature.getGeometry().transform('EPSG:4326', 'EPSG:3857');\n\nconst vector = new VectorLayer({\n  source: new VectorSource({\n    features: [feature]\n  })\n});\n\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\n\nconst dims = {\n  a0: [1189, 841],\n  a1: [841, 594],\n  a2: [594, 420],\n  a3: [420, 297],\n  a4: [297, 210],\n  a5: [210, 148]\n};\n\nconst exportButton = document.getElementById('export-pdf');\n\nexportButton.addEventListener('click', function() {\n\n  exportButton.disabled = true;\n  document.body.style.cursor = 'progress';\n\n  const format = document.getElementById('format').value;\n  const resolution = document.getElementById('resolution').value;\n  const dim = dims[format];\n  const width = Math.round(dim[0] * resolution / 25.4);\n  const height = Math.round(dim[1] * resolution / 25.4);\n  const size = /** @type {module:ol/size~Size} */ (map.getSize());\n  const extent = map.getView().calculateExtent(size);\n\n  map.once('rendercomplete', function(event) {\n    const canvas = event.context.canvas;\n    const data = canvas.toDataURL('image/jpeg');\n    const pdf = new jsPDF('landscape', undefined, format);\n    pdf.addImage(data, 'JPEG', 0, 0, dim[0], dim[1]);\n    pdf.save('map.pdf');\n    // Reset original map size\n    map.setSize(size);\n    map.getView().fit(extent, {size});\n    exportButton.disabled = false;\n    document.body.style.cursor = 'auto';\n  });\n\n  // Set print size\n  const printSize = [width, height];\n  map.setSize(printSize);\n  map.getView().fit(extent, {size: printSize});\n\n}, false);\n"],"sourceRoot":""}