{"version":3,"sources":["webpack:///./icon.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Feature_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_Overlay_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_6__","_src_ol_source_TileJSON_js__WEBPACK_IMPORTED_MODULE_7__","_src_ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_8__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_9__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_10__","iconFeature","geometry","name","population","rainfall","iconStyle","image","anchor","anchorXUnits","anchorYUnits","src","setStyle","const","vectorSource","features","vectorLayer","source","rasterLayer","url","crossOrigin","map","layers","target","document","getElementById","view","center","zoom","element","popup","positioning","stopEvent","offset","addOverlay","on","evt","feature","forEachFeatureAtPixel","pixel","coordinates","getGeometry","getCoordinates","setPosition","$","popover","placement","html","content","get","e","dragging","getEventPixel","originalEvent","hit","hasFeatureAtPixel","getTarget","style","cursor"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,IAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAA,GAAAU,EAAAV,EAAA,IAAAW,EAAAX,EAAA,IAAAY,EAAAZ,EAAA,IAAAa,EAAAb,EAAA,KAWMc,EAAc,IAAIX,EAAA,EAAQ,CAC9BY,SAAU,IAAIR,EAAA,EAAM,CAAC,EAAG,IACxBS,KAAM,cACNC,WAAY,IACZC,SAAU,MAGNC,EAAY,IAAIP,EAAA,EAAM,CAC1BQ,MAAO,IAAIP,EAAA,EAAiD,CAC1DQ,OAAQ,CAAC,GAAK,IACdC,aAAc,WACdC,aAAc,SACdC,IAAK,oBAITV,EAAYW,SAASN,GAErBO,IAAMC,EAAe,IAAIhB,EAAA,EAAa,CACpCiB,SAAU,CAACd,KAGPe,EAAc,IAAIrB,EAAA,EAAY,CAClCsB,OAAQH,IAGJI,EAAc,IAAItB,EAAA,EAAU,CAChCqB,OAAQ,IAAIpB,EAAA,EAAS,CACnBsB,IAAK,qEACLC,YAAa,OAIXC,EAAM,IAAI9B,EAAA,EAAI,CAClB+B,OAAQ,CAACJ,EAAaF,GACtBO,OAAQC,SAASC,eAAe,OAChCC,KAAM,IAAIjC,EAAA,EAAK,CACbkC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EAAUL,SAASC,eAAe,SAElCK,EAAQ,IAAItC,EAAA,EAAQ,CACxBqC,QAASA,EACTE,YAAa,gBACbC,WAAW,EACXC,OAAQ,CAAC,GAAI,MAEfZ,EAAIa,WAAWJ,GAGfT,EAAIc,GAAG,QAAS,SAASC,GACvBvB,IAAMwB,EAAUhB,EAAIiB,sBAAsBF,EAAIG,MAC5C,SAASF,GACP,OAAOA,IAEX,GAAIA,EAAS,CACXxB,IAAM2B,EAAcH,EAAQI,cAAcC,iBAC1CZ,EAAMa,YAAYH,GAClBI,EAAEf,GAASgB,QAAQ,CACjBC,UAAW,MACXC,MAAM,EACNC,QAASX,EAAQY,IAAI,UAEvBL,EAAEf,GAASgB,QAAQ,aAEnBD,EAAEf,GAASgB,QAAQ,aAKvBxB,EAAIc,GAAG,cAAe,SAASe,GAC7B,GAAIA,EAAEC,SACJP,EAAEf,GAASgB,QAAQ,eADrB,CAIAhC,IAAM0B,EAAQlB,EAAI+B,cAAcF,EAAEG,eAC5BC,EAAMjC,EAAIkC,kBAAkBhB,GAClClB,EAAImC,YAAYC,MAAMC,OAASJ,EAAM,UAAY","file":"icon.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport Overlay from '../src/ol/Overlay.js';\nimport View from '../src/ol/View.js';\nimport Point from '../src/ol/geom/Point.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport TileJSON from '../src/ol/source/TileJSON.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport {Icon, Style} from '../src/ol/style.js';\n\n\nconst iconFeature = new Feature({\n  geometry: new Point([0, 0]),\n  name: 'Null Island',\n  population: 4000,\n  rainfall: 500\n});\n\nconst iconStyle = new Style({\n  image: new Icon(/** @type {module:ol/style/Icon~Options} */ ({\n    anchor: [0.5, 46],\n    anchorXUnits: 'fraction',\n    anchorYUnits: 'pixels',\n    src: 'data/icon.png'\n  }))\n});\n\niconFeature.setStyle(iconStyle);\n\nconst vectorSource = new VectorSource({\n  features: [iconFeature]\n});\n\nconst vectorLayer = new VectorLayer({\n  source: vectorSource\n});\n\nconst rasterLayer = new TileLayer({\n  source: new TileJSON({\n    url: 'https://api.tiles.mapbox.com/v3/mapbox.geography-class.json?secure',\n    crossOrigin: ''\n  })\n});\n\nconst map = new Map({\n  layers: [rasterLayer, vectorLayer],\n  target: document.getElementById('map'),\n  view: new View({\n    center: [0, 0],\n    zoom: 3\n  })\n});\n\nconst element = document.getElementById('popup');\n\nconst popup = new Overlay({\n  element: element,\n  positioning: 'bottom-center',\n  stopEvent: false,\n  offset: [0, -50]\n});\nmap.addOverlay(popup);\n\n// display popup on click\nmap.on('click', function(evt) {\n  const feature = map.forEachFeatureAtPixel(evt.pixel,\n    function(feature) {\n      return feature;\n    });\n  if (feature) {\n    const coordinates = feature.getGeometry().getCoordinates();\n    popup.setPosition(coordinates);\n    $(element).popover({\n      placement: 'top',\n      html: true,\n      content: feature.get('name')\n    });\n    $(element).popover('show');\n  } else {\n    $(element).popover('destroy');\n  }\n});\n\n// change mouse cursor when over marker\nmap.on('pointermove', function(e) {\n  if (e.dragging) {\n    $(element).popover('destroy');\n    return;\n  }\n  const pixel = map.getEventPixel(e.originalEvent);\n  const hit = map.hasFeatureAtPixel(pixel);\n  map.getTarget().style.cursor = hit ? 'pointer' : '';\n});\n"],"sourceRoot":""}