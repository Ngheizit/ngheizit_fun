{"version":3,"sources":["webpack:///./drag-and-drop.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_format_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_format_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_format_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_format_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_format_js__WEBPACK_IMPORTED_MODULE_6__","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_7__","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_8__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_9__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_10__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_11__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_12__","dragAndDropInteraction","formatConstructors","map","interactions","Object","extend","layers","source","imagerySet","key","target","view","center","zoom","on","event","const","vectorSource","features","addLayer","getView","fit","getExtent","displayFeatureInfo","pixel","forEachFeatureAtPixel","feature","push","length","i","ii","info","get","document","getElementById","innerHTML","join","evt","dragging","getEventPixel","originalEvent"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,IAAAY,EAAAZ,EAAA,GAAAa,EAAAb,EAAA,IAAAc,EAAAd,EAAA,IAAAe,EAAAf,EAAA,IAOMgB,EAAyB,IAAIN,EAAA,EAAY,CAC7CO,mBAAoB,CAClBZ,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,KAIES,EAAM,IAAIf,EAAA,EAAI,CAClBgB,aAAcC,OAAAT,EAAA,EAAAS,GAAsBC,OAAO,CAACL,IAC5CM,OAAQ,CACN,IAAIV,EAAA,EAAU,CACZW,OAAQ,IAAIT,EAAA,EAAS,CACnBU,WAAY,SACZC,IAAK,wEAIXC,OAAQ,MACRC,KAAM,IAAIvB,EAAA,EAAK,CACbwB,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIVb,EAAuBc,GAAG,cAAe,SAASC,GAChDC,IAAMC,EAAe,IAAIlB,EAAA,EAAa,CACpCmB,SAAUH,EAAMG,WAElBhB,EAAIiB,SAAS,IAAItB,EAAA,EAAY,CAC3BU,OAAQU,KAEVf,EAAIkB,UAAUC,IAAIJ,EAAaK,eAGjCN,IAAMO,EAAqB,SAASC,GAClCR,IAAME,EAAW,GAIjB,GAHAhB,EAAIuB,sBAAsBD,EAAO,SAASE,GACxCR,EAASS,KAAKD,KAEM,EAAlBR,EAASU,OAAY,CACvBZ,IACIa,EAAGC,EADDC,EAAO,GAEb,IAAKF,EAAI,EAAGC,EAAKZ,EAASU,OAAQC,EAAIC,IAAMD,EAC1CE,EAAKJ,KAAKT,EAASW,GAAGG,IAAI,SAE5BC,SAASC,eAAe,QAAQC,UAAYJ,EAAKK,KAAK,OAAS,aAE/DH,SAASC,eAAe,QAAQC,UAAY,UAIhDjC,EAAIY,GAAG,cAAe,SAASuB,GAC7B,IAAIA,EAAIC,SAAR,CAGAtB,IAAMQ,EAAQtB,EAAIqC,cAAcF,EAAIG,eACpCjB,EAAmBC,MAGrBtB,EAAIY,GAAG,QAAS,SAASuB,GACvBd,EAAmBc,EAAIb","file":"drag-and-drop.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {GPX, GeoJSON, IGC, KML, TopoJSON} from '../src/ol/format.js';\nimport {defaults as defaultInteractions, DragAndDrop} from '../src/ol/interaction.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {BingMaps, Vector as VectorSource} from '../src/ol/source.js';\n\nconst dragAndDropInteraction = new DragAndDrop({\n  formatConstructors: [\n    GPX,\n    GeoJSON,\n    IGC,\n    KML,\n    TopoJSON\n  ]\n});\n\nconst map = new Map({\n  interactions: defaultInteractions().extend([dragAndDropInteraction]),\n  layers: [\n    new TileLayer({\n      source: new BingMaps({\n        imagerySet: 'Aerial',\n        key: 'As1HiMj1PvLPlqc_gtM7AqZfBL8ZL3VrjaS3zIb22Uvb9WKhuJObROC-qUpa81U5'\n      })\n    })\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\ndragAndDropInteraction.on('addfeatures', function(event) {\n  const vectorSource = new VectorSource({\n    features: event.features\n  });\n  map.addLayer(new VectorLayer({\n    source: vectorSource\n  }));\n  map.getView().fit(vectorSource.getExtent());\n});\n\nconst displayFeatureInfo = function(pixel) {\n  const features = [];\n  map.forEachFeatureAtPixel(pixel, function(feature) {\n    features.push(feature);\n  });\n  if (features.length > 0) {\n    const info = [];\n    let i, ii;\n    for (i = 0, ii = features.length; i < ii; ++i) {\n      info.push(features[i].get('name'));\n    }\n    document.getElementById('info').innerHTML = info.join(', ') || '&nbsp';\n  } else {\n    document.getElementById('info').innerHTML = '&nbsp;';\n  }\n};\n\nmap.on('pointermove', function(evt) {\n  if (evt.dragging) {\n    return;\n  }\n  const pixel = map.getEventPixel(evt.originalEvent);\n  displayFeatureInfo(pixel);\n});\n\nmap.on('click', function(evt) {\n  displayFeatureInfo(evt.pixel);\n});\n"],"sourceRoot":""}