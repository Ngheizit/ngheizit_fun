{"version":3,"sources":["webpack:///./select-features.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_events_condition_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_interaction_Select_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_6__","_src_ol_source_OSM_js__WEBPACK_IMPORTED_MODULE_7__","_src_ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_8__","raster","source","vector","url","format","map","layers","target","view","center","zoom","select","selectSingleClick","selectClick","condition","selectPointerMove","selectAltClick","mapBrowserEvent","Object","selectElement","document","getElementById","changeInteraction","removeInteraction","const","value","addInteraction","on","e","innerHTML","getFeatures","getLength","selected","length","deselected","onchange"],"mappings":"4FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,IAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,GAAAS,EAAAT,EAAA,IAAAU,EAAAV,EAAA,IAAAW,EAAAX,EAAA,IASMY,EAAS,IAAIJ,EAAA,EAAU,CAC3BK,OAAQ,IAAIH,EAAA,IAGRI,EAAS,IAAIL,EAAA,EAAY,CAC7BI,OAAQ,IAAIF,EAAA,EAAa,CACvBI,IAAK,iCACLC,OAAQ,IAAIV,EAAA,MAIVW,EAAM,IAAId,EAAA,EAAI,CAClBe,OAAQ,CAACN,EAAQE,GACjBK,OAAQ,MACRC,KAAM,IAAIhB,EAAA,EAAK,CACbiB,OAAQ,CAAC,EAAG,GACZC,KAAM,MAINC,EAAS,KAGPC,EAAoB,IAAIjB,EAAA,EAGxBkB,EAAc,IAAIlB,EAAA,EAAO,CAC7BmB,UAAWrB,EAAA,IAIPsB,EAAoB,IAAIpB,EAAA,EAAO,CACnCmB,UAAWrB,EAAA,IAGPuB,EAAiB,IAAIrB,EAAA,EAAO,CAChCmB,UAAW,SAASG,GAClB,OAAOC,OAAAzB,EAAA,EAAAyB,CAAMD,IAAoBC,OAAAzB,EAAA,EAAAyB,CAAWD,MAI1CE,EAAgBC,SAASC,eAAe,QAExCC,EAAoB,WACT,OAAXX,GACFN,EAAIkB,kBAAkBZ,GAExBa,IAAMC,EAAQN,EAAcM,MAYb,QAVbd,EADW,eAATc,EACOb,EACS,SAATa,EACAZ,EACS,eAATY,EACAV,EACS,YAATU,EACAT,EAEA,QAGTX,EAAIqB,eAAef,GACnBA,EAAOgB,GAAG,SAAU,SAASC,GAC3BR,SAASC,eAAe,UAAUQ,UAAY,SAC1CD,EAAErB,OAAOuB,cAAcC,YACvB,+CAAiDH,EAAEI,SAASC,OAC5D,mBAAqBL,EAAEM,WAAWD,OAAS,kBASrDd,EAAcgB,SAAWb","file":"select-features.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {click, pointerMove, altKeyOnly} from '../src/ol/events/condition.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Select from '../src/ol/interaction/Select.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport VectorSource from '../src/ol/source/Vector.js';\n\nconst raster = new TileLayer({\n  source: new OSM()\n});\n\nconst vector = new VectorLayer({\n  source: new VectorSource({\n    url: 'data/geojson/countries.geojson',\n    format: new GeoJSON()\n  })\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\nlet select = null; // ref to currently selected interaction\n\n// select interaction working on \"singleclick\"\nconst selectSingleClick = new Select();\n\n// select interaction working on \"click\"\nconst selectClick = new Select({\n  condition: click\n});\n\n// select interaction working on \"pointermove\"\nconst selectPointerMove = new Select({\n  condition: pointerMove\n});\n\nconst selectAltClick = new Select({\n  condition: function(mapBrowserEvent) {\n    return click(mapBrowserEvent) && altKeyOnly(mapBrowserEvent);\n  }\n});\n\nconst selectElement = document.getElementById('type');\n\nconst changeInteraction = function() {\n  if (select !== null) {\n    map.removeInteraction(select);\n  }\n  const value = selectElement.value;\n  if (value == 'singleclick') {\n    select = selectSingleClick;\n  } else if (value == 'click') {\n    select = selectClick;\n  } else if (value == 'pointermove') {\n    select = selectPointerMove;\n  } else if (value == 'altclick') {\n    select = selectAltClick;\n  } else {\n    select = null;\n  }\n  if (select !== null) {\n    map.addInteraction(select);\n    select.on('select', function(e) {\n      document.getElementById('status').innerHTML = '&nbsp;' +\n          e.target.getFeatures().getLength() +\n          ' selected features (last operation selected ' + e.selected.length +\n          ' and deselected ' + e.deselected.length + ' features)';\n    });\n  }\n};\n\n\n/**\n * onchange callback on the select element.\n */\nselectElement.onchange = changeInteraction;\nchangeInteraction();\n"],"sourceRoot":""}