{"version":3,"sources":["webpack:///./layer-clipping-webgl.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_WebGLMap_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_has_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_source_OSM_js__WEBPACK_IMPORTED_MODULE_4__","const","osm","source","fragmentShaderSource","layers","target","view","center","zoom","join","vertexShaderSource","on","event","context","glContext","gl","getGL","program","createProgram","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","attachShader","fragmentShader","FRAGMENT_SHADER","linkProgram","useProgram","positionLocation","getAttribLocation","enable","STENCIL_TEST","colorMask","stencilOp","KEEP","REPLACE","stencilFunc","ALWAYS","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","drawArrays","TRIANGLES","deleteBuffer","NOTEQUAL","disable","document","getElementById","style","display"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,IAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,IAMA,GAAKK,EAAA,EAME,CAELG,IAAMC,EAAM,IAAIH,EAAA,EAAU,CACxBI,OAAQ,IAAIH,EAAA,IAYRI,GATM,IAAIR,EAAA,EAAI,CAClBS,OAAQ,CAACH,GACTI,OAAQ,MACRC,KAAM,IAAIV,EAAA,EAAK,CACbW,OAAQ,CAAC,EAAG,GACZC,KAAM,MAImB,CAC3B,2BACA,gBACA,KACAC,KAAK,KAEDC,EAAqB,CACzB,6BACA,gBACA,0CACA,KACAD,KAAK,IAEPR,EAAIU,GAAG,aAAc,SAASC,GAC5BZ,IAAMa,EAAUD,EAAME,UAEhBC,EAAKF,EAAQG,QACbC,EAAUF,EAAGG,gBAEbC,EAAeJ,EAAGK,aAAaL,EAAGM,eACxCN,EAAGO,aAAaH,EAAcT,GAC9BK,EAAGQ,cAAcJ,GACjBJ,EAAGS,aAAaP,EAASE,GAEzBnB,IAAMyB,EAAiBV,EAAGK,aAAaL,EAAGW,iBAC1CX,EAAGO,aAAaG,EAAgBtB,GAChCY,EAAGQ,cAAcE,GACjBV,EAAGS,aAAaP,EAASQ,GAEzBV,EAAGY,YAAYV,GACfJ,EAAQe,WAAWX,GAEnBjB,IAAM6B,EAAmBd,EAAGe,kBAAkBb,EAAS,cAEvDF,EAAGgB,OAAOhB,EAAGiB,cACbjB,EAAGkB,WAAU,GAAO,GAAO,GAAO,GAClClB,EAAGmB,UAAUnB,EAAGoB,KAAMpB,EAAGoB,KAAMpB,EAAGqB,SAClCrB,EAAGsB,YAAYtB,EAAGuB,OAAQ,EAAG,KAE7BtC,IAAMuC,EAASxB,EAAGyB,eAClBzB,EAAG0B,WAAW1B,EAAG2B,aAAcH,GAC/BxB,EAAG4B,WAAW5B,EAAG2B,aAAc,IAAIE,aAAa,EAE7C,GAAM,GAAM,KAAO,GAAM,EAAK,GAC9B,EAAK,GAAM,KAAO,GAAM,IAAM,GAE9B,IAAM,GAAM,KAAO,GAAM,GAAK,GAC9B,GAAK,GAAM,KAAO,GAAM,IAAM,EAE/B,GAAM,EAAK,KAAO,EAAK,EAAK,EAC5B,EAAK,EAAK,KAAO,EAAK,IAAM,EAE5B,IAAM,EAAK,KAAO,EAAK,GAAK,EAC5B,GAAK,EAAK,KAAO,EAAK,IAAM,IAC1B7B,EAAG8B,aAEP9B,EAAG+B,wBAAwBjB,GAC3Bd,EAAGgC,oBAAoBlB,EAAkB,EAAGd,EAAGiC,OAAO,EAAO,EAAG,GAChEjC,EAAGkC,WAAWlC,EAAGmC,UAAW,EAAG,IAE/BnC,EAAG0B,WAAW1B,EAAG2B,aAAc,MAC/B3B,EAAGoC,aAAaZ,GAEhBxB,EAAGkB,WAAU,GAAM,GAAM,GAAM,GAC/BlB,EAAGsB,YAAYtB,EAAGqC,SAAU,EAAG,KAC/BrC,EAAGmB,UAAUnB,EAAGoB,KAAMpB,EAAGoB,KAAMpB,EAAGoB,QAGpClC,EAAIU,GAAG,cAAe,SAASC,GAC7BZ,IACMe,EADUH,EAAME,UACHE,QACnBD,EAAGsC,QAAQtC,EAAGiB,oBA5FN,CACGsB,SAASC,eAAe,YAIhCC,MAAMC,QAAU","file":"layer-clipping-webgl.js","sourcesContent":["import Map from '../src/ol/WebGLMap.js';\nimport View from '../src/ol/View.js';\nimport {WEBGL} from '../src/ol/has.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport OSM from '../src/ol/source/OSM.js';\n\nif (!WEBGL) {\n  const info = document.getElementById('no-webgl');\n  /**\n   * display error message\n   */\n  info.style.display = '';\n} else {\n\n  const osm = new TileLayer({\n    source: new OSM()\n  });\n\n  const map = new Map({\n    layers: [osm],\n    target: 'map',\n    view: new View({\n      center: [0, 0],\n      zoom: 2\n    })\n  });\n\n  const fragmentShaderSource = [\n    'precision mediump float;',\n    'void main() {',\n    '}'\n  ].join('');\n\n  const vertexShaderSource = [\n    'attribute vec2 a_position;',\n    'void main() {',\n    '  gl_Position = vec4(a_position, 0, 1);',\n    '}'\n  ].join('');\n\n  osm.on('precompose', function(event) {\n    const context = event.glContext;\n\n    const gl = context.getGL();\n    const program = gl.createProgram();\n\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexShaderSource);\n    gl.compileShader(vertexShader);\n    gl.attachShader(program, vertexShader);\n\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentShaderSource);\n    gl.compileShader(fragmentShader);\n    gl.attachShader(program, fragmentShader);\n\n    gl.linkProgram(program);\n    context.useProgram(program);\n\n    const positionLocation = gl.getAttribLocation(program, 'a_position');\n\n    gl.enable(gl.STENCIL_TEST);\n    gl.colorMask(false, false, false, false);\n    gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n    gl.stencilFunc(gl.ALWAYS, 1, 0xff);\n\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      // first band\n      -1.0, -1.0, -0.75, -1.0, -1.0, 1.0,\n      -1.0, 1.0, -0.75, -1.0, -0.75, 1.0,\n      // second band\n      -0.5, -1.0, -0.25, -1.0, -0.5, 1.0,\n      -0.5, 1.0, -0.25, -1.0, -0.25, 1.0,\n      // third band\n      0.0, -1.0, 0.25, -1.0, 0.0, 1.0,\n      0.0, 1.0, 0.25, -1.0, 0.25, 1.0,\n      // forth band\n      0.5, -1.0, 0.75, -1.0, 0.5, 1.0,\n      0.5, 1.0, 0.75, -1.0, 0.75, 1.0\n    ]), gl.STATIC_DRAW);\n\n    gl.enableVertexAttribArray(positionLocation);\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.drawArrays(gl.TRIANGLES, 0, 24);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.deleteBuffer(buffer);\n\n    gl.colorMask(true, true, true, true);\n    gl.stencilFunc(gl.NOTEQUAL, 0, 0xff);\n    gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n  });\n\n  osm.on('postcompose', function(event) {\n    const context = event.glContext;\n    const gl = context.getGL();\n    gl.disable(gl.STENCIL_TEST);\n  });\n}\n"],"sourceRoot":""}